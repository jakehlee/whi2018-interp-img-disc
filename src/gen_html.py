#!/usr/bin/env python
# Collect and present DEMUD+CNN+Inversion results

import sys, os
import csv

outputname = 'results.html'
imageset_dir = 'imageset'

# dosovitskiy inversion images
# Expected directory structure:
# /dosov_dir/select/n.png - nth inversion of select-cnn-*.csv from DEMUD
# /dosov_dir/recon/n.png - nth inversion of recon-cnn-*.csv from DEMUD
# /dosov_dir/resid/n.png - nth inversion of resid-cnn-*.csv from DEMUD
dosov_dir = 'msl_dosov'

# demud selection csv
# selection, index, name, score
# has header row
demud_path = 'DEMUD/results/selections-k50.csv'

# performance plot image path
perfplot_path = 'perfplot.jpg'

# number of selections to display
n_display = 20


# images:
# original, direct dosov inversion, recon dosov inversion, resid...
# information
# title, generation date, for each selection, DEMUD selection line

title = 'DEMUD CNN [layer] [k-val] on [imageset]'

if __name__ == '__main__':
	currdir = os.path.dirname(os.path.abspath(__file__))
	outfile = os.path.join(currdir, outputname)
	with open(outfile, 'w') as f:
		f.write('<html><head><title> %s </title></head>\n' % title)
		f.write('<body>\n')
		f.write('<h1> %s </h1>\n' % title)
		f.write('<ul>\n')
		f.write('<li>Selections are presented in decreasing order of novelty.</li>\n')
		f.write('<li>The imageset comprises of n classes, n images total. Images are scaled and center-cropped to 227x227.</li>\n')
		f.write('<li>The feature vectors are taken from the [layer] layer of caffenet, a version of alexnet.</li>\n')
		f.write('<li>Only the top %d selections are shown.</li>\n' % n_display)
		f.write('<li>The inversions are generated by Dosovitskiy and Brox, 2015.</li>\n')
		f.write('</ul>\n')
		f.write('<img src=%s alt="" width=40%%>' % perfplot_path)
		# read demud selections csv and pop header
		demud_file = open(demud_path, 'r')
		csv_reader = csv.reader(demud_file)
		demud_list = list(csv_reader)
		demud_list.pop(0)
	
		# initialize table
		f.write('<table style="width:100%">\n')
		f.write('<tr>\n')
		f.write('<th> selection </th>\n')
		f.write('<th> direct inv </th>\n')
		f.write('<th> recon inv </th>\n')
		f.write('<th> resid inv </th>\n')
		f.write('</tr>\n')

		for i in range(n_display):
			sel_str = str(demud_list[i])
			sel_img = os.path.join(imageset_dir, demud_list[i][2])
			sel_dv = os.path.join(dosov_dir, 'select', str(i)+'.png')
			rec_dv = os.path.join(dosov_dir, 'recon', str(i)+'.png')
			res_dv = os.path.join(dosov_dir, 'resid', str(i)+'.png')

			f.write('<tr>\n')
			f.write('<td> <img src=%s alt=""> <br> %s <br> - </td>\n' % (sel_img, sel_str))
			f.write('<td> <img src=%s alt=""></td>\n' % (sel_dv))
			f.write('<td> <img src=%s alt=""></td>\n' % (rec_dv))
			if i == 0:
				f.write('<td></td>')
			else:
				f.write('<td> <img src=%s alt=""></td>\n' % (res_dv))

			f.write('</tr>\n')
		f.write('</body></html>')
	

